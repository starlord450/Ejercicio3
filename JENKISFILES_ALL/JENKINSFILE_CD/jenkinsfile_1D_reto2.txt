pipeline{
    agent any
    stages{
        stage('Get Code'){
            steps{
                sh 'git clone -b master https://github.com/starlord450/todo-list-aws'
            }
        }
        stage('Deploy'){
            steps{
                script{
                    sh 'sam deploy --force-upload --no-confirm-changeset --no-fail-on-empty-changeset --stack-name todo-list-aws-production --config-env production --resolve-s3 --template todo-list-aws/template.yaml'
                }
                
            }
        }
        stage('Rest Test') {
        steps {
            script {
                def BASE_URL = sh(script: "aws cloudformation describe-stacks --stack-name todo-list-aws-production --query 'Stacks[0].Outputs[?OutputKey==`BaseUrlApi`].OutputValue' --output text", returnStdout: true).trim()
                echo "La URL de la API es: $BASE_URL"
                withEnv(["BASE_URL=${BASE_URL}"]) {
                    sh "/home/ubuntu/.local/bin/pytest --junitxml=test/integration/result-rest.xml -k 'not deletetodo and not updatetodo and not addtodo' -s todo-list-aws/test/integration/todoApiTest.py" 

                    }
                }
                
            }
        }
    }    
    post{
        always { 
            echo 'Clean env: delete dir'
            cleanWs()
        }
    }
}